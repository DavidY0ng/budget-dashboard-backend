// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {

  id                Int     @id @default(autoincrement())
  name              String?
  email             String  @unique
  password          String?
  incomeinput       IncomeInput[]
  expenseinput      ExpenseInput[]
  calculationrecord CalculationRecord[]
  setgoal           SetGoal[]
}

model IncomeInput {
  id              Int     @id @default(autoincrement())
  monthlyincome   Int?
  otherincome     Int?
  date            DateTime?
  note            String?
  user            User @relation(fields:[userId], references: [id])
  userId          Int 
}

model ExpenseInput {
  id            Int     @id @default(autoincrement())
  category      String
  amount        Int
  note          String?
  date          DateTime?
  user          User @relation(fields:[userId], references: [id])
  userId        Int 
}

model CalculationRecord {
  id                  Int     @id @default(autoincrement())
  title               String?
  incomePerMonth      Int?
  expensesPerMonth    Int?
  balancePerMonth     Int?
  totalSaving         Int?
  duration            String?
  savingsPerMonth     Int?
  user                User @relation(fields:[userId], references: [id])
  userId              Int
  expenseCategories   ExpensesCategoryForCalculationRecord[]
}

model ExpensesCategoryForCalculationRecord{
  id          Int     @id @default(autoincrement())
  name        String
  value       Int
  CalculationRecord     CalculationRecord@relation(fields: [CalculationRecordId], references: [id])
  CalculationRecordId   Int
}

model SetGoal {
  id                  Int     @id @default(autoincrement())
  title               String?
  incomePerMonth      Int?
  expensesPerMonth    Int?
  balancePerMonth     Int?
  totalSaving         Int?
  duration            String?
  savingsPerMonth     Int?
  start_date          String?
  end_date            String?
  user                User @relation(fields:[userId], references: [id])
  userId              Int  
  expenseCategories   ExpenseCategoryForSetGoal[]
}

model ExpenseCategoryForSetGoal {
  id          Int     @id @default(autoincrement())
  name        String
  value       Int
  setGoal     SetGoal @relation(fields: [setGoalId], references: [id])
  setGoalId   Int
}